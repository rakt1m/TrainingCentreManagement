// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingCentreManagement.DatabaseContext.DatabaseContext;

namespace TrainingCentreManagement.DatabaseContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ClassStart");

<<<<<<< HEAD
                    b.Property<int>("CourseId");

=======
>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
                    b.Property<DateTime>("RegistrationEnd");

                    b.Property<DateTime>("RegistrationStart");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("TotalSeats");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("CourseId");

=======
>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
                    b.ToTable("Batches");
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<int>("CategoryId");

=======
>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
                    b.Property<int>("Duration");

                    b.Property<decimal>("Fee");

<<<<<<< HEAD
                    b.Property<int>("IsLatest");

                    b.Property<int>("IsOnGoing");

                    b.Property<int>("IsUpComing");

                    b.Property<string>("Outline")
                        .IsRequired();

                    b.Property<string>("Tags")
                        .IsRequired();

=======
                    b.Property<string>("Outline")
                        .IsRequired();

>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("CategoryId");

=======
>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Institute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Institutes");
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("LinkedinProfile")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });
<<<<<<< HEAD

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Batch", b =>
                {
                    b.HasOne("TrainingCentreManagement.Models.EntityModels.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrainingCentreManagement.Models.EntityModels.Course", b =>
                {
                    b.HasOne("TrainingCentreManagement.Models.EntityModels.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
=======
>>>>>>> f086ee706453272d91887f09ef1c2e4ebf3d9e98
#pragma warning restore 612, 618
        }
    }
}
